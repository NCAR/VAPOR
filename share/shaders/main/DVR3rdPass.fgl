#version 410 core

in vec4 positionClip;   // vertex position in the clip space
in vec4 positionEye;    // vertex position in the eye space

uniform sampler2D backFaceTexture;
uniform sampler2D frontFaceTexture;
uniform sampler3D volumeTexture;
uniform sampler3D missingValueMaskTexture;
uniform sampler1D colorMapTexture;

uniform vec2 valueRange;     // min and max values of the variable
uniform vec2 colorMapRange;  // min and max values on the color map

layout(location = 0) out vec4 color;

void main(void)
{
    // Get UV coordinates of this frament
    if( positionClip.w == 0.0f )
        discard;
    vec2 positionUV = ((positionClip.xy / positionClip.w) + 1.0f) / 2.0f;

    vec4 stopTexture    = vec4(texture( backFaceTexture,  positionUV ).xyz, 1.0f);
    vec4 startTexture   = vec4(texture( frontFaceTexture, positionUV ).xyz, 1.0f);
    vec4 rayDirTexture  = stopTexture - startTexture;
    if( length( rayDirTexture ) == 0.0f )
        discard;

    color   = vec4( length(rayDirTexture)/1.732f );
    color.a = clamp( color.a * 2.0f, 0.0f, 1.0f );

    //color     = texture( missingValueMaskTexture, vec3(positionUV, 0.5) );
}
