//-----------------------------------------------------------------------
// Compute the gradient using the alpha channel
//-----------------------------------------------------------------------
uniform sampler1D colormap;
uniform sampler3D volumeTexture;
uniform vec3 dimensions;
vec3 alphaGradient()
{
  vec3 gradient;
    
  float dx = 0.5/(dimensions.x);
    float dy = 0.5/(dimensions.y);
    float dz = 0.5/(dimensions.z);
    
    vec3 a0;
    vec3 a1;
    
    a0.x = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(dx,0,0)).x).a;
    a1.x = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(-dx,0,0)).x).a;
    
    a0.y = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(0,dy,0)).x).a;
    a1.y = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(0,-dy,0)).x).a;
    
    a0.z = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(0,0,dz)).x).a;
    a1.z = texture1D(colormap, 
                     texture3D(volumeTexture, 
                               gl_TexCoord[0].xyz + vec3(0,0,-dz)).x).a;
    
    gradient = (a1-a0)/2.0;
    
    return gradient;
  }
  