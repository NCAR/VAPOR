uniform sampler2D previousPass;
uniform float width;
uniform float height;
void DepthPeel(in float calc_depth, in vec4 calc_color) {
    //sample previous depth fragment value at my x,y position in the window
    vec2 texCoord = vec2(gl_FragCoord.x / width, gl_FragCoord.y / height);
    float depth = texture2D(previousPass, texCoord).z;
    //use bias to avoid floating point rounding errors, can be adjusted to be more precise
    // by adding more 0s if z-fighting is an issue
    float bias =  .0000000000001;
    //ensure that only fragments behind the previously recorded depth get tested
    if (depth > calc_depth  || abs(depth - calc_depth) < bias )
     	  discard;
	
    gl_FragDepth =  calc_depth;
    gl_FragColor= calc_color;	
}
