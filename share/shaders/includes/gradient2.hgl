uniform sampler3D volumeTexture;
vec3 Gradient(in vec3 dims, in vec3 tc)
{
  if (dims.x<=0 || dims.y<=0 || dims.z<=0) return(vec3(0.0, 0.0, 0.0));
  vec3 h0 = vec3(-0.5,-0.5,-0.5) / dims;
  vec3 h1 = vec3(0.5,0.5,0.5) / dims;
  vec3 h = vec3(1.0, 1.0, 1.0);

  if ((tc.x + h0.x) < 0.0) {
    h0.x = 0.0;
    h.x = 0.5;
  }
  if ((tc.x + h1.x) > 1.0) {
    h1.x = 0.0;
    h.x = 0.5;
  }
  if ((tc.y + h0.y) < 0.0) {
    h0.y = 0.0;
    h.y = 0.5;
  }
  if ((tc.y + h1.y) > 1.0) {
    h1.y = 0.0;
    h.y = 0.5;
  }
  if ((tc.z + h0.z) < 0.0) {
    h0.z = 0.0;
    h.z = 0.5;
  }
  if ((tc.z + h1.z) > 1.0) {
    h1.z = 0.0;
    h.z = 0.5;
  }


  vec3 a0, a1;
  a0.x = texture3D(volumeTexture,tc + vec3(h0.x,0.0,0.0)).x;
  a1.x = texture3D(volumeTexture,tc + vec3(h1.x,0.0,0.0)).x;
  a0.y = texture3D(volumeTexture,tc + vec3(0.0,h0.y,0.0)).x;
  a1.y = texture3D(volumeTexture,tc + vec3(0.0,h1.y,0.0)).x;
  a0.z = texture3D(volumeTexture,tc + vec3(0.0,0.0,h0.z)).x;
  a1.z = texture3D(volumeTexture,tc + vec3(0.0,0.0,h1.z)).x;

  return(a1-a0/h);
}
