Is params::restart() method needed? It sets params to default state when
no data (i.e. datamgr) are present. Why not require data to be present before
initializing render params? RenderParams should require a valid (non-NULL) 
data mgr, and should not have to handle cases where one does not exist. I.e.
there should be no need for RenderParams::Valid(type==0)

Remove deprecated constructors (or constructor arguments) from
MapperFunction. e.g. nBits

RenderParams
------------

+ Should Set* functions all be made no-fail? I.e. return void and
adjust inputs as necessary to provide a correct value when calling
SetValueDouble, etc.

+ Move Barb specific stuff into Barb renderer (e.g. {Set,Get}Grid(), IsAlignedTo Data(), SetGridAlignStrides, etc).

+ How do get{Min,Max}EditBound() differ from
MapperFunction::get{Min,Map}Value(). Ans: These methods are used purely for
presentation within the GUI and should be moved out of the RenderParams
class to one of the session state classes

+ RenderParams subclass instances appear to be created at applicaiton
startup, and whenever a new session is created. These constructors
are fired *before* data are loaded. However, when a new instance
of a renderer is created (via the "New" button) another instance
of the params class is created again. Destructors are also not being
called properly.

+ No error handing performed for Set or Get methods. E.g. Setting
RGB color to value outside 0..1.0, setting variable to name that
doesn't exist, etc. How should these be handle? Ignore invalid
values? Reconcile to valid value? etc.

+ Move common text stuff (e.g. font size, text type, precision)
from isolineparams to RenderParams

MISC
----

+ Get/Set param acessors need validation has is done for isolineparams
