from pathlib import Path

VERSION_RC          = "@VERSION_RC@"
VERSION_DATE        = "@VERSION_DATE@"
VERSION_COMMIT      = "@VERSION_COMMIT@"
VERSION_STRING      = "@VERSION_STRING@"
VERSION_STRING_FULL = "@VERSION_STRING_FULL@"

BUILD_TYPE          = "@CMAKE_BUILD_TYPE@"
SOURCE_DIR          = "@PROJECT_SOURCE_DIR@"
BINARY_DIR          = "@CMAKE_BINARY_DIR@"
THIRD_PARTY_DIR     = "@THIRD_PARTY_DIR@"

PYTHON_VERSION      = "@PYTHONVERSION@"
PYTHON_DIR          = "@PYTHONDIR@"
PYTHON_PATH         = "@PYTHONPATH@"

SYSTEM_NAME = "@CMAKE_SYSTEM_NAME@"

PYTHON_API_SOURCE_DIR = "@CMAKE_CURRENT_SOURCE_DIR@"

#These do not work
CPACK_TOPLEVEL_DIR  = "@CPACK_TOPLEVEL_DIRECTORY@"
CPACK_TEMPORARY_DIR = "@CPACK_TEMPORARY_DIRECTORY@"

CPACK_INSTALLER_NAME = "@PROJECT_NAME@-@VERSION_STRING@-@CMAKE_SYSTEM_NAME@"
CPACK_STAGING_DIR   = f"{BINARY_DIR}/_CPack_Packages/{SYSTEM_NAME}/External/{CPACK_INSTALLER_NAME}"



pkg = "@CPACK_PACKAGE_NAME@"
pk2g = "@CPACK_PACKAGE_FILE_NAME@"
PROJECT_NAME = "@PROJECT_NAME@"
CPACK_PACKAGE_VERSION = "@CPACK_PACKAGE_VERSION@"


for n in ['BINARY_DIR', 'PYTHON_API_SOURCE_DIR', 'CPACK_STAGING_DIR']:
    f = eval(n)
    if Path(f).exists():
        print(f"{n} OK {f}")
    else:
        print(f"{n} NOT FOUND {f}")
        assert 0

